# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.30.2"

default_platform :ios

platform :ios do
   #before_all do
    ## ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    #sh "cd .. && rm -rf Pods"
    #sh "cd .. && rm -rf Podfile.lock"
    #cocoapods()
    #sh "cd .. && ./RUNME"
    ## following line is not required when building in xCode
    ##sh "cd .. && mv Pods/BoringSSL/include/openssl/module.modulemap Pods/BoringSSL/include/openssl/BoringSSL.modulemap"
  #end

  desc "Generate icons"
  lane :icon do
    appicon(
      appicon_devices: [:ipad, :iphone],
      appicon_path: 'Speech/Assets.xcassets/'
    )
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(git_url: "ssh://git@dev.timecar.co:9022/timecar/certificates.git",
      type: "appstore",
      clone_branch_directly: true)
#    match(
#      type: "appstore",
#      git_url: 'http://' + ENV["GIT_USER"] + ':' + ENV["GIT_PASSWORD"] + '@45.32.89.1:9090/timecar/certificates.git'
#    ) # more information: https://codesigning.guide
#    icon
    increment_build_number
    gym(scheme: "Pods-Speech")
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Pods-Speech") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
